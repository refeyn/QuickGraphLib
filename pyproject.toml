[project]
name = "QuickGraphLib"
description = "A scientific graphing library for QtQuick"
readme = "README.md"
license = { file = "LICENCE" }
authors = [{ name = "Matthew Joyce", email = "matthew.joyce@refeyn.com" }]
dependencies = ["PySide6==6.8.0", "contourpy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Multimedia :: Graphics :: Presentation",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: User Interfaces",
    "Typing :: Typed",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/refeyn/QuickGraphLib"
Issues = "https://github.com/refeyn/QuickGraphLib/issues"
Documentation = "https://refeyn.github.io/QuickGraphLib"
Source = "https://github.com/refeyn/QuickGraphLib"

[project.optional-dependencies]
analyse = [
    # Code analysis
    "black",
    "pylint",
    "mypy",
    "pre-commit",
    "lxml",
    # Testing
    "pytest",
    "pytest-cov",
    # Building
    "scikit-build-core",
    "shiboken6_generator==6.8.0",
    "setuptools_scm",
]

[build-system]
requires = ["scikit-build-core", "shiboken6_generator==6.8.0", "PySide6==6.8.0"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["QuickGraphLib/_version.py"]
sdist.exclude = [".github", ".vscode"]
wheel.py-api = "cp39"

[tool.scikit-build.cmake.define]
INSTALL_SUBPATH = "."

[tool.setuptools_scm]
write_to = "QuickGraphLib/_version.py"

[tool.cibuildwheel]
build = [
    "cp39-macosx_x86_64",
    "cp39-win_amd64",
    "cp39-manylinux_x86_64",
    # "cp39-manylinux_aarch64",
]
before-all = "python ci/setup_qt.py"
repair-wheel-command = ""
build-frontend = "build"
test-command = "pytest -sv {project}/tests --import-mode=append"
test-extras = ["analyse"]

[tool.cibuildwheel.environment]
SKBUILD_CMAKE_DEFINE = "CMAKE_PREFIX_PATH=\"$(python ci/find_qt.py)/lib/cmake\""
PIP_EXTRA_INDEX_URL = "https://download.qt.io/official_releases/QtForPython/"

[tool.cibuildwheel.macos]
archs = ["universal2"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]                                                                                                   # , "aarch64"]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
repair-wheel-command = "cp {wheel} {dest_dir}; wheel tags --remove --platform-tag $AUDITWHEEL_PLAT {dest_dir}/*.whl"

[tool.cibuildwheel.linux.environment]
SKBUILD_CMAKE_DEFINE = "CMAKE_PREFIX_PATH=\"$(python ci/find_qt.py)/lib/cmake\""
PIP_EXTRA_INDEX_URL = "https://download.qt.io/official_releases/QtForPython/"
LD_LIBRARY_PATH = "$LD_LIBRARY_PATH:$(python ci/find_qt.py)/lib"
LLVM_INSTALL_DIR = "/usr"

[tool.cibuildwheel.windows]
archs = ["AMD64"]

[tool.isort]
profile = "black"
force_alphabetical_sort_within_sections = true
combine_as_imports = true

[tool.pylint.main]
extension-pkg-whitelist = ["PySide6"]

[tool.pylint.'messages control']
disable = [
    "R", # R=Refactor
    "C", # C=Conventions
]
